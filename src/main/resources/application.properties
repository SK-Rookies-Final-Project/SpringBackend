spring.application.name=springbackend

# --- Ohio Broker 접속 설정 (동적 SCRAM 방식) ---
# 주의: 고정된 계정 정보는 제거되었습니다.
# 모든 인증은 KafkaAuthenticationService에서 동적으로 처리됩니다.
spring.kafka.bootstrap-servers=${OHIO_KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-512
# spring.kafka.properties.sasl.jaas.config는 동적으로 설정됩니다.

# Consumer 설정
# 어떤 Consumer 그룹에 속할지 ID를 지정 + random.uuid로 계속 변경
spring.kafka.consumer.group-id=${CONSUMER_GROUP_ID}-${random.uuid}

# 실행할 때마다 오프셋을 0으로 초기화하고 처음부터 읽기
# spring.kafka.consumer.auto-offset-reset=earliest

# 값 직렬화/역직렬화(Kafka에 저장 된 데이터가 어떤 데이터인지 알려줌)
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# 스프링의 전역 KafkaListener 자동 시작 비활성화 (사용자별 Consumer만 사용)
spring.kafka.listener.auto-startup=false

## --- DB 설정 (필요시 활성화) ---
#spring.datasource.hikari.initialization-fail-timeout=0
#spring.datasource.url=jdbc:postgresql://your-db-host:5432/your-db?sslmode=require
#spring.datasource.username=${DB_USERNAME}
#spring.datasource.password=${DB_PASSWORD}
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.datasource.hikari.maximum-pool-size=10
#spring.datasource.hikari.minimum-idle=2
#spring.datasource.hikari.connection-timeout=30000
#spring.datasource.hikari.validation-timeout=5000

## --- JWT 설정 ---
jwt.secret=R3A0a3oPGI4qTYn7YTY1yC3X7xvQKZ8o+2Q8mU0lpM3eT+gvk9H+O5J1Yw9XjPjEfLWhF6QjvHqkUhH6a9d83kM2LbxYkqYrG5jC1HgFqN8=
jwt.expiration=86400000

# --- Logging: 최소 정보만 ---
logging.level.root=warn
logging.level.org.springframework=warn
logging.level.org.springframework.web=warn
logging.level.org.hibernate=warn
logging.level.org.apache.kafka=warn
logging.level.org.apache.tomcat=warn
logging.level.io.github.cdimascio.dotenv=error
# 프로빙 확인을 위해 서비스 패키지 로그는 info로 상승
logging.level.com.finalproject.springbackend.service=info

# 배너/DevTools 등 소음 제거
spring.main.banner-mode=off
spring.devtools.add-properties=false
spring.devtools.restart.enabled=false

# 에러 스택트레이스 노출 최소화
server.error.include-stacktrace=never

# --- App: 고정 후보 토픽 (프로빙 대상) ---
app.topic.candidates=certified-2time, certified-notMove, resource-level-false, system-level-false