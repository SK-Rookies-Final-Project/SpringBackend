spring.application.name=springbackend

# --- Ohio Broker 접속 설정 (동적 SCRAM 방식) ---
spring.kafka.bootstrap-servers=${OHIO_KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.properties.security.protocol=SASL_PLAINTEXT
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-512
# spring.kafka.properties.sasl.jaas.config는 동적으로 설정됩니다.

# --- Kafka 연결 타임아웃 설정 ---
spring.kafka.admin.properties.request.timeout.ms=10000
spring.kafka.admin.properties.connections.max.idle.ms=30000
spring.kafka.admin.properties.metadata.max.age.ms=30000
spring.kafka.admin.properties.retries=3
spring.kafka.admin.properties.retry.backoff.ms=1000

# Consumer 설정
# 어떤 Consumer 그룹에 속할지 ID를 지정 + random.uuid로 계속 변경
spring.kafka.consumer.group-id=${CONSUMER_GROUP_ID}

# 값 직렬화/역직렬화(Kafka에 저장 된 데이터가 어떤 데이터인지 알려줌)
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# 스프링의 전역 KafkaListener 자동 시작 비활성화 (사용자별 Consumer만 사용)
spring.kafka.listener.auto-startup=false


## --- JWT 설정 ---
jwt.secret=R3A0a3oPGI4qTYn7YTY1yC3X7xvQKZ8o+2Q8mU0lpM3eT+gvk9H+O5J1Yw9XjPjEfLWhF6QjvHqkUhH6a9d83kM2LbxYkqYrG5jC1HgFqN8=
jwt.expiration=86400000

# --- Spring Security 설정 ---
# 기본 인증 완전 비활성화 (JWT만 사용)
spring.security.user.name=
spring.security.user.password=
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
# 기본 인증 메시지 비활성화
logging.level.org.springframework.security=warn

# --- Logging: 최소 정보만 ---
logging.level.root=warn
logging.level.org.springframework=warn
logging.level.org.springframework.web=warn
logging.level.org.hibernate=warn
logging.level.org.apache.kafka=warn
logging.level.org.apache.tomcat=warn
logging.level.io.github.cdimascio.dotenv=error
# 프로빙 확인을 위해 서비스 패키지 로그는 info로 상승
logging.level.com.finalproject.springbackend.service=info

# --- 리소스 최적화 설정 ---
# JVM 힙 메모리 최적화
spring.jvm.heap.size=512m
# Tomcat 스레드 풀 최적화
server.tomcat.threads.max=50
server.tomcat.threads.min-spare=5
server.tomcat.max-connections=200
# HTTP 연결 타임아웃 최적화
server.tomcat.connection-timeout=30000
server.tomcat.keep-alive-timeout=20000
server.tomcat.max-keep-alive-requests=100

# 배너/DevTools 등 소음 제거
spring.main.banner-mode=off
spring.devtools.add-properties=false
spring.devtools.restart.enabled=false

# 에러 스택트레이스 노출 최소화
server.error.include-stacktrace=never
