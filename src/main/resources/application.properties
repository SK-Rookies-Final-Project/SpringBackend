spring.application.name=springbackend

# --- Ohio Broker 접속 설정 (SCRAM 방식) ---
spring.kafka.bootstrap-servers=${OHIO_KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.properties.security.protocol=SASL_PLAINTEXT
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-512
spring.kafka.properties.sasl.jaas.config=\
  org.apache.kafka.common.security.scram.ScramLoginModule required \
  username="${OHIO_KAFKA_USERNAME}" \
  password="${OHIO_KAFKA_PASSWORD}";

# Consumer 설정
# 어떤 Consumer 그룹에 속할지 ID를 지정 + random.uuid로 계속 변경
spring.kafka.consumer.group-id=${CONSUMER_GROUP_ID}-${random.uuid}

# 실행할 때마다 오프셋을 0으로 초기화하고 처음부터 읽기
spring.kafka.consumer.auto-offset-reset=earliest

# Kafka에 저장 된 데이터가 어떤 데이터인지 알려줌
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Enable Kafka auto-configuration
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=1000

# Logging
#logging.level.org.springframework.kafka=DEBUG
#logging.level.org.apache.kafka=DEBUG

logging.level.org.springframework.kafka=ERROR
logging.level.org.apache.kafka=ERROR
logging.level.kafka=ERROR
