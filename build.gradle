plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.finalproject'
version = '0.0.1-SNAPSHOT'
description = 'springbackend'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'io.github.cdimascio:java-dotenv:5.2.2'

	runtimeOnly 'org.postgresql:postgresql:42.7.3'

	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.kafka:spring-kafka'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// 로그인 기능 추가하기 위해 해당 의존성들 추가
//	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	runtimeOnly 'org.postgresql:postgresql'
//
//	// JWT (jjwt 0.11.x)
//	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
//	runtimeOnly   'io.jsonwebtoken:jjwt-impl:0.11.5'
//	runtimeOnly   'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

tasks.named('test') {
	useJUnitPlatform()
}
